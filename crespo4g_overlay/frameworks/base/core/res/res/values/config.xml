<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2011, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<!-- Sojus - specific voice mail resources -->
<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    <!-- Component to be used as the status bar service.  Must implement the IStatusBar
         interface.  This name is in the ComponentName flattened format (package/class)  -->
    <string name="config_statusBarComponent">com.android.systemui/com.android.systemui.statusbar.StatusBarService</string>

    <!-- Do not translate. Defines the slots for the right-hand side icons.  That is to say, the
         icons in the status bar that are not notifications. -->
    <string-array name="config_statusBarIcons">
       <item><xliff:g id="id">ime</xliff:g></item>
       <item><xliff:g id="id">sync_failing</xliff:g></item>
       <item><xliff:g id="id">sync_active</xliff:g></item>
       <item><xliff:g id="id">gps</xliff:g></item>
       <item><xliff:g id="id">bluetooth</xliff:g></item>
       <item><xliff:g id="id">nfc</xliff:g></item>
       <item><xliff:g id="id">tty</xliff:g></item>
       <item><xliff:g id="id">speakerphone</xliff:g></item>
       <item><xliff:g id="id">mute</xliff:g></item>
       <item><xliff:g id="id">volume</xliff:g></item>
       <item><xliff:g id="id">wifi</xliff:g></item>
       <item><xliff:g id="id">wimax</xliff:g></item>
       <item><xliff:g id="id">cdma_eri</xliff:g></item>
       <item><xliff:g id="id">data_connection</xliff:g></item>
       <item><xliff:g id="id">phone_evdo_signal</xliff:g></item>
       <item><xliff:g id="id">phone_signal</xliff:g></item>
       <item><xliff:g id="id">battery</xliff:g></item>
       <item><xliff:g id="id">alarm_clock</xliff:g></item>
       <item><xliff:g id="id">secure</xliff:g></item>
       <item><xliff:g id="id">clock</xliff:g></item>
    </string-array>

    <!-- This string array should be overridden by the device to present a list of network
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[Connection name],[ConnectivityManager connection type],
         [associated radio-type],[priority]  -->
    <string-array translatable="false" name="networkAttributes">
        <item>"wimax,6,6,1"</item>
        <item>"wifi,1,1,2"</item>
        <item>"mobile,0,0,0"</item>
        <item>"mobile_mms,2,0,3"</item>
        <item>"mobile_supl,3,0,3"</item>
        <item>"mobile_dun,4,0,5"</item>
        <item>"mobile_hipri,5,0,4"</item>
    </string-array>

    <!-- This string array should be overridden by the device to present a list of radio
         attributes.  This is used by the connectivity manager to decide which networks can coexist
         based on the hardware -->
    <!-- An Array of "[ConnectivityManager connectionType],
                      [# simultaneous connection types]"  -->
    <string-array translatable="false" name="radioAttributes">
        <item>"6,1"</item>
        <item>"1,1"</item>
        <item>"0,1"</item>
    </string-array>

    <!-- Regex array of allowable upstream ifaces for tethering - for example if you want
         tethering on a new interface called "foo2" add <item>"foo\\d"</item> to the array -->
    <!-- Interfaces will be prioritized according to the order listed -->
    <string-array translatable="false" name="config_tether_upstream_regexs">
        <item>"uwbr0"</item>
        <item>"rmnet\\d"</item>
        <item>"eth\\d"</item>
    </string-array>

    <!-- Boolean indicating if we require the use of DUN on mobile for tethering.
         Note that this defaults to false so that if you move to a carrier that
         hasn't configured anything tethering will still work. Â If you'd rather
         make the device untetherable on unconfigured devices, set to true -->
    <bool translatable="false" name="config_tether_dun_required">true</bool>

    <!-- Set and Unsets WiMAX -->
    <bool name="config_wimaxEnabled">true</bool>
    <!-- Location of the wimax framwork jar location -->
    <string name="config_wimaxServiceJarLocation">/vendor/lib/wimax_service.jar</string>
    <!-- Location of the wimax native library locaiton -->
    <string name="config_wimaxNativeLibLocation">/vendor/lib/libSECmWiMAXcAPI.so</string>
    <!-- Name of the wimax manager class -->
    <string name="config_wimaxManagerClassname">android.net.wimax.WimaxManager</string>
    <!-- Name of the wimax service class -->
    <string name="config_wimaxServiceClassname">com.android.server.WimaxService</string>
    <!-- Name of the wimax state tracker clas -->
    <string name="config_wimaxStateTrackerClassname">android.net.wimax.WimaxStateTracker</string>
    <!-- Set to true if the RSSI should always display CDMA signal
         strength even on EVDO -->
    <bool name="config_alwaysUseCdmaRssi">true</bool>
</resources>
